{"version":3,"sources":["data.js","components/Cards.jsx","index.js"],"names":["data","id","cardId","isMatched","isFlipped","img","Cards","handleCardFlip","state","cards","cardsFlipped","length","filtered","map","card","setState","flipped","filter","handleCardMatch","setTimeout","moves","handleGameCompletion","alert","shuffled","sort","Math","random","console","log","this","className","key","uuid","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1953266.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  FcGlobe,\n  FcEngineering,\n  FcHighPriority,\n  FcLeave,\n  FcRating,\n  FcRatings,\n  FcTemplate,\n  FcVideoProjector,\n} from \"react-icons/fc\";\n\nexport const data = [\n  { id: 0, cardId: 1, isMatched: false, isFlipped: false, img: <FcGlobe /> },\n  { id: 0, cardId: 2, isMatched: false, isFlipped: false, img: <FcGlobe /> },\n  {\n    id: 1,\n    cardId: 3,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcEngineering />,\n  },\n  {\n    id: 1,\n    cardId: 4,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcEngineering />,\n  },\n  {\n    id: 2,\n    cardId: 5,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcHighPriority />,\n  },\n  {\n    id: 2,\n    cardId: 6,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcHighPriority />,\n  },\n  { id: 3, cardId: 7, isMatched: false, isFlipped: false, img: <FcLeave /> },\n  { id: 3, cardId: 8, isMatched: false, isFlipped: false, img: <FcLeave /> },\n  { id: 4, cardId: 9, isMatched: false, isFlipped: false, img: <FcRating /> },\n  { id: 4, cardId: 10, isMatched: false, isFlipped: false, img: <FcRating /> },\n  { id: 5, cardId: 11, isMatched: false, isFlipped: false, img: <FcRatings /> },\n  { id: 5, cardId: 12, isMatched: false, isFlipped: false, img: <FcRatings /> },\n  {\n    id: 6,\n    cardId: 13,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcTemplate />,\n  },\n  {\n    id: 6,\n    cardId: 14,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcTemplate />,\n  },\n  {\n    id: 7,\n    cardId: 15,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcVideoProjector />,\n  },\n  {\n    id: 7,\n    cardId: 16,\n    isMatched: false,\n    isFlipped: false,\n    img: <FcVideoProjector />,\n  },\n];\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { data } from \"../data\";\n\nexport default class Cards extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: [],\n      cardsFlipped: [],\n      moves: 0,\n    };\n  }\n\n  componentDidMount() {\n    const shuffled = data.sort(() => Math.random() - 0.5);\n    console.log(shuffled);\n    this.setState({ cards: shuffled });\n  }\n\n  componentDidUpdate() {\n    this.handleCardMatch();\n    this.handleGameCompletion();\n  }\n\n  componentWillUnmount() {\n    this.setState({ cards: data });\n  }\n\n  handleCardFlip = (cardId) => {\n    const { cards, cardsFlipped } = this.state;\n    if (cardsFlipped.length !== 2) {\n      let filtered = cards.map((card) => {\n        if (card.cardId === cardId) {\n          card.isFlipped = true;\n        }\n        return card;\n      });\n      this.setState({ cards: filtered });\n\n      let flipped = cards.filter((card) => card.cardId === cardId);\n\n      if (flipped[0]) {\n        this.setState({\n          cardsFlipped: [...this.state.cardsFlipped, ...flipped],\n        });\n      }\n    }\n  };\n\n  handleCardMatch = () => {\n    let cardsFlipped = this.state.cardsFlipped;\n    let cards = this.state.cards;\n\n    if (cardsFlipped.length === 2) {\n      if (cardsFlipped[0].id === cardsFlipped[1].id) {\n        cards = cards.map((card) => {\n          if (card.id === cardsFlipped[0].id) {\n            return { ...card, isMatched: true };\n          }\n          return card;\n        });\n        setTimeout(() => {\n          this.setState({\n            cards: cards,\n            cardsFlipped: [],\n            moves: this.state.moves + 1,\n          });\n        }, 1000);\n      } else {\n        cards = cards.map((card) => {\n          if (\n            card.id === cardsFlipped[0].id ||\n            card.id === cardsFlipped[1].id\n          ) {\n            return { ...card, isFlipped: false };\n          }\n          return card;\n        });\n        setTimeout(() => {\n          this.setState({\n            cards: cards,\n            cardsFlipped: [],\n            moves: this.state.moves + 1,\n          });\n        }, 1000);\n      }\n    }\n  };\n\n  handleGameCompletion = () => {\n    let { cards } = this.state;\n    let filter = cards.filter((card) => !card.isMatched);\n    if (filter.length === 0) {\n      setTimeout(() => {\n        alert(\n          `Congratulations, Game Completed in 0 minutes and 0 seconds and total moves are ${this.state.moves}`\n        );\n      }, 400);\n    }\n  };\n\n  render() {\n    const { cards, moves } = this.state;\n    return (\n      <>\n        <div className=\"container\">\n          <h1 className=\"heading\">Memory Game</h1>\n          <div className=\"score-panel\">\n            <span className=\"moves\"> {moves} Move(s) </span>\n            <span className=\"time\">0 min 0 sec</span>\n          </div>\n          <ul className=\"grid\">\n            {cards.map((card) => {\n              return (\n                <li\n                  className=\"card\"\n                  key={uuid()}\n                  onClick={() => this.handleCardFlip(card.cardId)}\n                >\n                  {card.isFlipped ? (\n                    <div className=\"img\">{card.img}</div>\n                  ) : null}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\n\nimport Cards from \"./components/Cards\";\n\nfunction App() {\n  return <Cards />;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}